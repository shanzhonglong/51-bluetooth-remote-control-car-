C51 COMPILER V9.60.7.0   MAIN                                                              04/26/2025 17:39:43 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\keil c51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\mai
                    -n.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <at89c51RC2.h>
   2          #include "Timer0.h"
   3          
   4          // 电机控制引脚定义
   5          sbit STBY = P2^4;  // 待机控制引脚
   6          sbit PWMA = P2^5;  // 电机 A 的 PWM 控制引脚
   7          sbit AIN1 = P2^6;  // 电机 A 的方向控制引脚 1
   8          sbit AIN2 = P2^7;  // 电机 A 的方向控制引脚 2
   9          sbit BIN1 = P1^0;  // 电机 B 的方向控制引脚 1
  10          sbit BIN2 = P1^1;  // 电机 B 的方向控制引脚 2
  11          sbit PWMB = P1^2;  // 电机 B 的 PWM 控制引脚
  12          
  13          
  14          
  15          unsigned char motor1_active = 0;  // 电机1是否处于活动状态
  16          void Uart1_Init(void) //9600bps@11.0592MHz
  17          {
  18   1        PCON &= 0x7F;   //波特率不倍速
  19   1        SCON = 0x50;    //8位数据,可变波特率
  20   1        AUXR &= 0xBF;   //定时器时钟12T模式
  21   1        AUXR &= 0xFE;   //串口1选择定时器1为波特率发生器
  22   1        TMOD &= 0x0F;   //设置定时器模式
  23   1        TMOD |= 0x20;   //设置定时器模式
  24   1        TL1 = 0xFD;     //设置定时初始值
  25   1        TH1 = 0xFD;     //设置定时重载值
  26   1        ET1 = 0;      //禁止定时器中断
  27   1        TR1 = 1;      //定时器1开始计时
  28   1      }
  29          
  30          char UART_ReceiveChar(void) {
  31   1          while (!RI);      // 等待接收数据完成
  32   1          RI = 0;           // 清除接收标志
  33   1          return SBUF;      // 返回接收到的数据
  34   1      }
  35          
  36          // 电机控制函数
  37          void MotorControl(char command) {
  38   1          // 先关闭所有电机
  39   1          AIN1 = 0;
  40   1          AIN2 = 0;
  41   1          BIN1 = 0;
  42   1          BIN2 = 0;
  43   1          PWMA = 0;
  44   1          PWMB = 0;
  45   1          STBY = 1;  // 保持 STBY 为高电平，使能电机驱动
  46   1      
  47   1          switch (command) {
  48   2              case 'F':  // 前进
  49   2                  AIN1 = 1;
  50   2                  AIN2 = 0;
  51   2                  PWMA = 1;  // 设置 PWM 为高电平
  52   2                  break;
  53   2      
  54   2              case 'B':  // 后退
C51 COMPILER V9.60.7.0   MAIN                                                              04/26/2025 17:39:43 PAGE 2   

  55   2                  AIN1 = 0;
  56   2                  AIN2 = 1;
  57   2                  PWMA = 1;  // 设置 PWM 为高电平
  58   2                  break;
  59   2      
  60   2              case 'L':  // 左转
  61   2                  BIN1 = 1;
  62   2                  BIN2 = 0;
  63   2                  PWMB = 1;  // 设置 PWM 为高电平
  64   2                  break;
  65   2      
  66   2              case 'R':  // 右转
  67   2                  BIN1 = 0;
  68   2                  BIN2 = 1;
  69   2                  PWMB = 1;  // 设置 PWM 为高电平
  70   2                  break;
  71   2      
  72   2              case 'S':  // 停止
  73   2                  AIN1 = 0;
  74   2                  AIN2 = 0;
  75   2                  BIN1 = 0;
  76   2                  BIN2 = 0;
  77   2                  PWMA = 0;
  78   2                  PWMB = 0;
  79   2                  break;
  80   2      
  81   2              default:
  82   2                  // 无效命令，不做任何操作
  83   2                  break;
  84   2          }
  85   1      }
  86          
  87          void main()
  88          {
  89   1        char command;
  90   1        Uart1_Init();  // 初始化串口
  91   1        while(1)
  92   1        {
  93   2           command = UART_ReceiveChar();  // 接收来自单片机A的指令
  94   2           MotorControl(command);  // 根据接收到的指令控制电机
  95   2        }
  96   1      } 
  97          
  98          
  99          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    123    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
